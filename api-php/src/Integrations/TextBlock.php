<?php

// PLEASE DO NOT EDIT THIS FILE, THIS IS GENERATED BY NATIVEBLOCKS

namespace App\Integrations; 

class TextBlock
{
    private string $keyType;
    private int $integrationVersion;
    private array $properties = [];
    private array $data = [];
    private array $events = [];
    private array $actions = [];
    private array $blocks = [];
    private array $slots = [];
    private string $visibilityKey;
    private string $slot;
    private string $key;

    public function __construct(array $config = [])
    {
        $this->keyType = 'TEXT';
        $this->integrationVersion = 3;
        $this->key = $config['key'] ?? '';
        $this->visibilityKey = $config['visibilityKey'] ?? '';
        $this->slot = $config['slot'] ?? '';
        $this->actions = [];
        $this->blocks = [];
        $initialProperties = [
            ['key' => 'fontWeight', 'valueMobile' => 'normal', 'valueTablet' => 'normal', 'valueDesktop' => 'normal', 'type' => 'STRING'],
            ['key' => 'overflow', 'valueMobile' => 'clip', 'valueTablet' => 'clip', 'valueDesktop' => 'clip', 'type' => 'STRING'],
            ['key' => 'minLines', 'valueMobile' => '1', 'valueTablet' => '1', 'valueDesktop' => '1', 'type' => 'INT'],
            ['key' => 'maxLines', 'valueMobile' => '9999', 'valueTablet' => '9999', 'valueDesktop' => '9999', 'type' => 'INT'],
            ['key' => 'width', 'valueMobile' => 'wrap', 'valueTablet' => 'wrap', 'valueDesktop' => 'wrap', 'type' => 'STRING'],
            ['key' => 'height', 'valueMobile' => 'wrap', 'valueTablet' => 'wrap', 'valueDesktop' => 'wrap', 'type' => 'STRING'],
            ['key' => 'fontFamily', 'valueMobile' => 'default', 'valueTablet' => 'default', 'valueDesktop' => 'default', 'type' => 'STRING'],
            ['key' => 'fontSize', 'valueMobile' => '14.0', 'valueTablet' => '14.0', 'valueDesktop' => '14.0', 'type' => 'DOUBLE'],
            ['key' => 'textColor', 'valueMobile' => '#ffffffff', 'valueTablet' => '#ffffffff', 'valueDesktop' => '#ffffffff', 'type' => 'STRING'],
            ['key' => 'textAlign', 'valueMobile' => 'start', 'valueTablet' => 'start', 'valueDesktop' => 'start', 'type' => 'STRING'],
        ];
        $this->properties = $initialProperties;

        $initialData = [
            ['key' => 'text', 'value' => null, 'type' => 'STRING'],
        ];
        $this->data = $initialData;

        $initialSlots = [
        ];
        $this->slots = $initialSlots;

        $initialEvents = [
        ];
        $this->events = $initialEvents;
    }

    private function isValidEvent(string $eventName): bool
    {
        foreach ($this->events as $event) {
            if ($event['event'] === $eventName) {
                return true;
            }
        }
        return false;
    }

    private function isValidBlock(array $block): bool
    {
        return isset($block['key']) && isset($block['keyType']);
    }

    public function modifyProperty(string $key, string $valueMobile, string $valueTablet, string $valueDesktop): self
    {
        foreach ($this->properties as &$property) {
            if ($property['key'] === $key) {
                $property['valueMobile'] = $valueMobile;
                $property['valueTablet'] = $valueTablet;
                $property['valueDesktop'] = $valueDesktop;
                break;
            }
        }
        return $this;
    }

    public function assignData(string $key, $value): self
    {
        foreach ($this->data as &$data) {
            if ($data['key'] === $key) {
                $data['value'] = $value;
                break;
            }
        }
        return $this;
    }

    public function build(): array
    {
        return [
            'keyType' => $this->keyType,
            'key' => $this->key,
            'visibilityKey' => $this->visibilityKey,
            'slot' => $this->slot,
            'slots' => $this->slots,
            'actions' => $this->actions,
            'blocks' => $this->blocks,
            'data' => $this->data,
            'properties' => $this->properties,
            'integrationVersion' => $this->integrationVersion,
        ];
    }
}
